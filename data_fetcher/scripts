from requests.auth import HTTPBasicAuth
import requests

def authenticate(api_key):
    auth = HTTPBasicAuth(api_key)
    return auth

def search_and_download_image(auth, search_filter):
    search_url = "https://api.planet.com/data/v1/quick-search"
    search_result = requests.post(search_url, auth=auth, json=search_filter)

    # Handle error
    if search_result.status_code != 200:
        raise Exception(f"Search request failed with status code {search_result.status_code}")
    
    # Get first item from search results (Make sure the search params return just one)
    items = search_result.json()["features"]
    if not items:
        raise Exception("No items found matching the search criteria")
    
    item = items[0]
    item_id = item["id"]
    item_type = item["properties"]["item_type"]

    # Get item assets
    assets_url = f"https://api.planet.com/data/v1/item-types/{item_type}/items/{item_id}/assets"
    assets_result = requests.get(assets_url, auth=auth)

    if assets_result.status_code != 200:
        raise Exception(f"Assets request failed with status code {assets_result.status_code}")
    
    assets = assets_result.json()

    # Activate ortho_analytic_4b asset
    ortho_analytic_4b_activation_url = assets["ortho_analytic_4b"]["_links"]["activate"]
    activation_result = requests.get(ortho_analytic_4b_activation_url, auth=auth)

    if activation_result.status_code != 204:
        raise Exception(f"Asset activation failed with status code {activation_result.status_code}")
    
    # Download image
    download_url = assets["ortho_analytic_4b"]["location"]
    image_result = requests.get(download_url, auth=auth)
    
    if image_result.status_code != 200:
        raise Exception(f"Image download failed with status code {image_result.status_code}")
    
    # Save image to file
    with open(f"{item_id}.tif", "wb") as f:
        f.write(image_result.content)
    
    return item_id

def main():
    # Load API Key
    api_key = ''

    # Missing input parameters error messages

    # Search filter setup

    # Search and download image, don't display it


if __name__ == "__main__":
    main()